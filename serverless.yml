service: RemindMeOfThisTweet
plugins:
- serverless-dotenv-plugin
- serverless-plugin-aws-alerts
- serverless-mocha-plugin

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 256
  logRetentionInDays: 30
  iamRoleStatements:
  - Effect: "Allow"
    Action:
    - "events:DeleteRule"
    - "events:RemoveTargets"
    - "events:PutRule"
    - "events:PutTargets"
    Resource:
    - "*"
  - Effect: Allow
    Action:
    - cloudwatch:PutMetricData
    Resource:
    - "*"

  environment:
    TWITTER_CONSUMER_KEY: ${env:TWITTER_CONSUMER_KEY}
    TWITTER_CONSUMER_SECRET: ${env:TWITTER_CONSUMER_SECRET}
    TWITTER_ACCESS_TOKEN: ${env:TWITTER_ACCESS_TOKEN}
    TWITTER_ACCESS_TOKEN_SECRET: ${env:TWITTER_ACCESS_TOKEN_SECRET}
    TWITTER_SCREEN_NAME: RemindMe_OfThis
    TWITTER_CALLBACK_URL: ${env:TWITTER_CALLBACK_URL}
    REDIS_HOSTNAME: ${env:REDIS_HOSTNAME}
    REDIS_PORT: ${env:REDIS_PORT}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD}
    LAMBDA_FUNCTION_NAME: ${env:LAMBDA_FUNCTION_NAME}
    LAMBDA_FUNCTION_ARN: ${env:LAMBDA_FUNCTION_ARN}
    EXTERNAL_URL: ${env:EXTERNAL_URL}
    FIREBASE_PROJECT_ID: ${env:FIREBASE_PROJECT_ID}

package:
  exclude:
  - "*.md"
  - "*.png"
  - .*
  - .*/**
  - bin/**
  - test/**
  - spec/**
  - awscli-bundle.zip
  - awscli-bundle/**

functions:
  handleAccountActivity:
    handler: handler.handleAccountActivity
    timeout: 50
    events:
    - http:
        path: /webhook
        method: post
    alarms:
    - functionErrors
    - functionDuration

  handleTwitterCrc:
    handler: handler.handleTwitterCrc
    events:
    - http:
        path: /webhook
        method: get
    alarms:
    - functionErrors
    - functionDuration

  checkForRemindersAndSend:
    handler: handler.checkForRemindersAndSend
    timeout: 60
    events:
    - schedule: rate(1 minute)
    alarms:
    - functionErrors
    - functionDuration

  getHomePage:
    handler: handler.getHomePage
    events:
      - http:
          path: /
          method: get

  getPage:
    handler: handler.getPage
    events:
      - http:
          path: /{page}
          method: get
          request:
            parameters:
              paths:
                page: true
    alarms:
      - functionErrors
      - name: functionDuration
        threshold: 2000

  startTwitterSignIn:
    handler: handler.startTwitterSignIn
    events:
      - http:
          path: /_/starttwittersignin
          method: get

  completeTwitterSignIn:
    handler: handler.completeTwitterSignIn
    events:
      - http:
          path: /_/completetwittersignin
          method: get

  updateSettings:
    handler: handler.updateSettings
    events:
      - http:
          path: /_/updatesettings
          method: post

  retryFailedTasks:
    handler: handler.retryFailedTasks

# Deprecated
  remind:
    handler: handler.remind
    alarms:
    - functionErrors
    - functionDuration

custom:
  alerts:
    definitions:
      functionErrors:
        # alert if function throws an error
        threshold: 1
        period: 60
        treatMissingData: notBreaching
      functionDuration:
        # alert if function takes more than 2 seconds too many times
        threshold: 2000
        period: 60
        datapointsToAlarm: 10
        evaluationPeriods: 30
        treatMissingData: notBreaching
    topics:
      alarm:
        topic: ${self:service}-dev-alerts-alarm
        notifications:
        - protocol: email
          endpoint: shalvah.adebayo+awsalerts@gmail.com
